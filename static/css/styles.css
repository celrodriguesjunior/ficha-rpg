:root {
    --bg: #10131a;
    --surface: #1b2230;
    --surface-alt: #242c3d;
    --text: #f0f3ff;
    --muted: #b3bed6;
    --accent: #6c8af5;
    --danger: #ff5978;
    --radius: 12px;
    --transition: 0.2s ease;
    font-family: "Segoe UI", Helvetica, Arial, sans-serif;
}

* {
    box-sizing: border-box;
}

body {
    margin: 0;
    background: var(--bg);
    color: var(--text);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

.container {
    width: min(1100px, 92vw);
    margin: 0 auto;
}

.top-bar {
    background: rgba(16, 19, 26, 0.9);
    backdrop-filter: blur(12px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.08);
    position: sticky;
    top: 0;
    z-index: 10;
}

.top-bar .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
}

.logo {
    font-size: 1.3rem;
    font-weight: 700;
    color: var(--text);
    text-decoration: none;
}

main.container {
    flex: 1;
    padding: 2rem 0 3rem;
}

.section h1 {
    margin-top: 0;
    font-size: 2rem;
}

.grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 1.5rem;
}

.card {
    background: var(--surface);
    border-radius: var(--radius);
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-height: 100%;
    border: 1px solid rgba(255, 255, 255, 0.05);
    transition: transform var(--transition), border var(--transition);
}

.card:hover {
    transform: translateY(-4px);
    border-color: rgba(108, 138, 245, 0.4);
}

.card-image {
    width: 100%;
    height: 180px;
    object-fit: cover;
}

.card-body {
    padding: 1rem 1.2rem;
    flex: 1;
}

.card-body h2 {
    margin: 0 0 0.6rem;
}

.card-body p {
    margin: 0.2rem 0;
    color: var(--muted);
}

.card-actions {
    display: flex;
    gap: 0.6rem;
    padding: 1rem 1.2rem 1.3rem;
}

.button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.6rem 1.1rem;
    border-radius: 999px;
    border: none;
    background: var(--accent);
    color: #fff;
    font-weight: 600;
    text-decoration: none;
    cursor: pointer;
    transition: background var(--transition), transform var(--transition);
}

.button:hover {
    background: #88a0ff;
}

.button.secondary {
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: var(--text);
}

.button.secondary:hover {
    border-color: rgba(255, 255, 255, 0.4);
}

.button.danger {
    background: var(--danger);
}

.flash-messages {
    list-style: none;
    margin: 0 0 1.5rem;
    padding: 0;
}

.flash {
    padding: 0.9rem 1.1rem;
    border-radius: var(--radius);
    margin-bottom: 0.7rem;
    background: var(--surface-alt);
    border: 1px solid rgba(255, 255, 255, 0.08);
}

.flash.success {
    border-color: rgba(108, 245, 181, 0.4);
}

.flash.error {
    border-color: rgba(255, 89, 120, 0.4);
}

.form {
    display: flex;
    flex-direction: column;
    gap: 1.4rem;
}

.form-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 1rem 1.5rem;
}

label {
    display: flex;
    flex-direction: column;
    color: var(--muted);
    font-size: 0.95rem;
    gap: 0.4rem;
}

input[type="text"],
input[type="number"],
textarea {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.12);
    border-radius: 10px;
    padding: 0.6rem 0.8rem;
    color: var(--text);
    font-size: 1rem;
    transition: border var(--transition), box-shadow var(--transition);
}

input:focus,
textarea:focus {
    outline: none;
    border-color: rgba(108, 138, 245, 0.6);
    box-shadow: 0 0 0 2px rgba(108, 138, 245, 0.2);
}

textarea {
    resize: vertical;
}

.form-fieldset {
    border: 1px solid rgba(255, 255, 255, 0.12);
    border-radius: var(--radius);
    padding: 1rem 1.5rem 1.4rem;
}

.form-fieldset legend {
    padding: 0 0.6rem;
}

.attributes-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1rem;
}

.image-upload {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
}

.image-preview {
    display: flex;
    flex-direction: column;
    gap: 0.6rem;
}

.image-preview img {
    width: 200px;
    border-radius: var(--radius);
    border: 1px solid rgba(255, 255, 255, 0.1);
    object-fit: cover;
}

.character-detail {
    display: flex;
    flex-direction: column;
    gap: 1.8rem;
}

.detail-header {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.detail-actions {
    display: flex;
    gap: 0.8rem;
    flex-wrap: wrap;
}

.detail-body {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    align-items: start;
}

.portrait img {
    width: 100%;
    border-radius: var(--radius);
    border: 1px solid rgba(255, 255, 255, 0.12);
    object-fit: cover;
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 0.8rem;
}

.stat {
    background: var(--surface-alt);
    padding: 0.8rem;
    border-radius: var(--radius);
    text-align: center;
}

.stat span {
    display: block;
    font-size: 0.75rem;
    color: var(--muted);
    text-transform: uppercase;
    letter-spacing: 0.08em;
}

.stat strong {
    font-size: 1.3rem;
}

.attributes-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1.2rem;
}

.attributes-table th,
.attributes-table td {
    padding: 0.6rem;
    text-align: center;
    border: 1px solid rgba(255, 255, 255, 0.08);
}

.detail-sections {
    display: grid;
    gap: 1.5rem;
}

.detail-sections section {
    background: var(--surface);
    border-radius: var(--radius);
    padding: 1.2rem 1.4rem;
    border: 1px solid rgba(255, 255, 255, 0.06);
}

.detail-sections h2 {
    margin-top: 0;
}

.footer {
    padding: 1.2rem 0;
    border-top: 1px solid rgba(255, 255, 255, 0.08);
    background: rgba(16, 19, 26, 0.9);
    color: var(--muted);
    text-align: center;
}

@media (max-width: 600px) {
    .top-bar .container {
        flex-direction: column;
        gap: 0.8rem;
    }

    .card-actions {
        flex-direction: column;
    }

    .stats-grid {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }
}
